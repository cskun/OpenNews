package me.jinkun.opennews.database.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;
import me.jinkun.opennews.features.news.bean.NewsChannel;
import me.jinkun.opennews.domain.NewsDetail;
import me.jinkun.opennews.domain.NewsImage;
import me.jinkun.opennews.features.news.bean.NewsRead;
import me.jinkun.opennews.domain.NewsTopic;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsChannelDaoConfig;
    private final DaoConfig newsTopicDaoConfig;
    private final DaoConfig newsReadDaoConfig;
    private final DaoConfig newsDetailDaoConfig;
    private final DaoConfig newsImageDaoConfig;

    private final NewsChannelDao newsChannelDao;
    private final NewsTopicDao newsTopicDao;
    private final NewsReadDao newsReadDao;
    private final NewsDetailDao newsDetailDao;
    private final NewsImageDao newsImageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsChannelDaoConfig = daoConfigMap.get(NewsChannelDao.class).clone();
        newsChannelDaoConfig.initIdentityScope(type);

        newsTopicDaoConfig = daoConfigMap.get(NewsTopicDao.class).clone();
        newsTopicDaoConfig.initIdentityScope(type);

        newsReadDaoConfig = daoConfigMap.get(NewsReadDao.class).clone();
        newsReadDaoConfig.initIdentityScope(type);

        newsDetailDaoConfig = daoConfigMap.get(NewsDetailDao.class).clone();
        newsDetailDaoConfig.initIdentityScope(type);

        newsImageDaoConfig = daoConfigMap.get(NewsImageDao.class).clone();
        newsImageDaoConfig.initIdentityScope(type);

        newsChannelDao = new NewsChannelDao(newsChannelDaoConfig, this);
        newsTopicDao = new NewsTopicDao(newsTopicDaoConfig, this);
        newsReadDao = new NewsReadDao(newsReadDaoConfig, this);
        newsDetailDao = new NewsDetailDao(newsDetailDaoConfig, this);
        newsImageDao = new NewsImageDao(newsImageDaoConfig, this);

        registerDao(NewsChannel.class, newsChannelDao);
        registerDao(NewsTopic.class, newsTopicDao);
        registerDao(NewsRead.class, newsReadDao);
        registerDao(NewsDetail.class, newsDetailDao);
        registerDao(NewsImage.class, newsImageDao);
    }
    
    public void clear() {
        newsChannelDaoConfig.getIdentityScope().clear();
        newsTopicDaoConfig.getIdentityScope().clear();
        newsReadDaoConfig.getIdentityScope().clear();
        newsDetailDaoConfig.getIdentityScope().clear();
        newsImageDaoConfig.getIdentityScope().clear();
    }

    public NewsChannelDao getNewsChannelDao() {
        return newsChannelDao;
    }

    public NewsTopicDao getNewsTopicDao() {
        return newsTopicDao;
    }

    public NewsReadDao getNewsReadDao() {
        return newsReadDao;
    }

    public NewsDetailDao getNewsDetailDao() {
        return newsDetailDao;
    }

    public NewsImageDao getNewsImageDao() {
        return newsImageDao;
    }

}
